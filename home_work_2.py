# На столе лежат n монеток. Некоторые из них лежат вверх решкой, а некоторые – гербом. 
# Определите минимальное число монеток, которые нужно перевернуть, чтобы все монетки были повернуты вверх одной и той же стороной. 
# Выведите минимальное количество монет, которые нужно перевернуть.
# Пример:
# 5 -> 1 0 1 1 0

# n = int (input('Введите количество монет:\n'))
# k = 0
# for i in range (n):
#     v = int (input('Введите "0" или "1" (орел и решка):\n'))
#     if v == 1:
#         k += 1
#     elif v > 1:
#         print ('Попробуйте сначала - Введите "0" или "1" (орел и решка)')
#         break
# print(f'Минимальное количество монет которое необходимо перевернуть: {k if k < n/2 else n - k}')

# OR

# import random
# n = int (input('Введите количество монет:\n'))
# k = 0
# for i in range (n):
#     v = (random.randint(0, 1))
#     print (v, end=' ')
#     if v == 1:
#         k += 1
# num = k if k < n/2 else n - k
# print(f'\nМинимальное количество монет которое необходимо перевернуть: {num}')

# Задача №2:
# Петя и Катя – брат и сестра. Петя – студент, а Катя – школьница. Петя помогает Кате по математике. 
# Он задумывает два натуральных числа X и Y (X,Y≤1000), а Катя должна их отгадать. 
# Для этого Петя делает две подсказки. Он называет сумму этих чисел S и их произведение P. 
# Помогите Кате отгадать задуманные Петей числа.
# Пример:
# 4 4 -> 2 2
# 5 6 -> 2 3

# def puzzle (S, P):
#     for x in range(1, 1000):
#         for y in range(1, 1000):
#             if x + y == S and x * y == P:
#                 print (x, y)             
# s = int(input ('Input summ (s):\n'))
# p = int(input ('Input composition (p):\n'))
# puzzle(s, p)

# Задача №3:
# Требуется вывести все целые степени двойки (т.е. числа вида 2k), не превосходящие числа N.
# Пример:
# 10 -> 1 2 4 8

# def integer_degrees (x):
#     i = 1
#     while i <= x:
#         print (i, end=' ')
#         i = i * 2
# number = int (input("Input number:\n"))
# integer_degrees(number)